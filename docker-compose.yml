version: '3'

services:

  nginx:
    container_name: wpnext_nginx
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    depends_on:
      - client
    ports:
      - "3050:80"

  api:
    container_name: wpnext_api
    image: wordpress
    restart: always
#    ports:
#      - "8080:80"
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: exampleuser
      WORDPRESS_DB_PASSWORD: examplepass
      WORDPRESS_DB_NAME: exampledb
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_HOME','http://localhost:3050/api');
        define('WP_SITEURL','http://localhost:3050/api');
    volumes:
      - api:/var/www/html
      - ./plugins:/var/www/html/wp-content/plugins
      - ./upload.ini:/usr/local/etc/php/conf.d/uploads.ini
    depends_on:
      - db

  db:
    container_name: wpnext_database
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - db:/var/lib/mysql

  client:
    container_name: wpnext_client
    build:
      context: . #specifying where we want all the files and folders for this image to be pulled from
      dockerfile: Dockerfile.dev #location of dockerfile to be used
#    ports:
#      - "3000:3000"
    restart: always
    environment:
      - WDS_SOCKET_PORT=0
    volumes:
      - /app/node_modules #this means "do not try to map a folder up against node_modules inside the container"
      - .:/app #the . is the current folder outside the container: the /app folder is inside the container
    depends_on:
      - api

volumes:
  api:
  db:
  client:
