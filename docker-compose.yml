version: '3'

services:

  db:
    container_name: wpnext_database
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - db:/var/lib/mysql

  api:
    container_name: wpnext_api
    image: wordpress:6.1.1-php8.0
    restart: always
    expose:
      - 8080
    environment:
      VIRTUAL_HOST: api-wpnext.local, www.api-wpnext.local
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: exampleuser
      WORDPRESS_DB_PASSWORD: examplepass
      WORDPRESS_DB_NAME: exampledb
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_HOME','http://api-wpnext.local');
        define('WP_SITEURL','http://api-wpnext.local');
    volumes:
      - api:/var/www/html
      - ./plugins:/var/www/html/wp-content/plugins
      - ./themes:/var/www/html/wp-content/themes
      - ./upload.ini:/usr/local/etc/php/conf.d/uploads.ini
    depends_on:
      - db

  client:
    container_name: wpnext_client
    build:
      context: . #specifying where we want all the files and folders for this image to be pulled from
      dockerfile: Dockerfile.dev #location of dockerfile to be used
    restart: always
    expose:
      - 3000
    environment:
      VIRTUAL_HOST: wpnext.local, www.wpnext.local
      WDS_SOCKET_PORT: 0
    volumes:
      - /app/node_modules #this means "do not try to map a folder up against node_modules inside the container"
      - .:/app #the . is the current folder outside the container: the /app folder is inside the container
    depends_on:
      - api

volumes:
  db:
  api:
  client:

networks:
  default:
    external:
      name: nginx-proxy
